//---------------------------------------------------------------------------
#include <vcl.h>
#pragma hdrstop

#include <boost/filesystem.hpp>
#include <boost/algorithm/string.hpp>

#include "utils.h"
#include "commdefs.h"
#include "TFormDebug.h"

//---------------------------------------------------------------------------
#pragma package(smart_init)

using namespace boost::filesystem;


namespace utils
{

AnsiString __fastcall GetDataPath()
{
/*
	assert(Application);
	AnsiString strExePath = Sysutils::ExtractFilePath(Application->ExeName);
    AnsiString strDataPath = strExePath + DATAPATH;
*/

    boost::filesystem::path TheExePath( AnsiString(Application->ExeName).c_str() );
    boost::filesystem::path TheExeDir = TheExePath.parent_path();

    std::string strExeDir = TheExeDir.directory_string();
    std::string strDataPath = strExeDir + DATAPATH;

											// we have to remove some "relative"
                                            // refs inside the data path string
	boost::replace_all(strDataPath, "\\.\\", "\\");
	boost::replace_all(strDataPath, "/./", "\\");

/*
#ifdef _DEBUG
	FormDebug->Print(strExeDir);
    FormDebug->Print(strDataPath);
#endif
*/

	return AnsiString(strDataPath.c_str());
}

/*!****************************************************************************
* @brief
******************************************************************************/
void __fastcall ParseDate(AnsiString strDate, int& nYear, int& nMonth, int& nDay)
{
	nDay = strDate.SubString(0, strDate.Pos("/") - 1).ToInt();

    strDate = strDate.SubString(strDate.Pos("/")+1, strDate.Length());
    nMonth = strDate.SubString(0, strDate.Pos("/") - 1).ToInt();

    strDate = strDate.SubString(strDate.Pos("/")+1, strDate.Length());
    nYear = strDate.ToInt();
}


};
